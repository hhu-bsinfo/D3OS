[env.development]
CARGO_CFG_TARGET_FAMILY = "${CARGO_MAKE_WORKSPACE_WORKING_DIRECTORY}/d3os_kernel.json"
BUILD_DIRECTORY = "${CARGO_MAKE_CRATE_TARGET_DIRECTORY}/d3os_kernel/debug"
CARGO_BUILD_OPTION = "--lib"

[env.production]
CARGO_CFG_TARGET_FAMILY = "${CARGO_MAKE_WORKSPACE_WORKING_DIRECTORY}/d3os_kernel.json"
BUILD_DIRECTORY = "${CARGO_MAKE_CRATE_TARGET_DIRECTORY}/d3os_kernel/release"
CARGO_BUILD_OPTION = "--release"

[env]
CARGO_MAKE_EXTEND_WORKSPACE_MAKEFILE = true
RUST_TARGET_PATH = "${CARGO_MAKE_WORKING_DIRECTORY}"
SOURCE_DIRECOTRY = "${CARGO_MAKE_WORKING_DIRECTORY}/src"
LINKER_FILE = "${CARGO_MAKE_WORKING_DIRECTORY}/link.ld"
RUST_OBJECT = "${BUILD_DIRECTORY}/lib${CARGO_MAKE_PROJECT_NAME}.a"
ASM_OBJECT = "${BUILD_DIRECTORY}/boot.o"
KERNEL = "${BOOTLOADER_DIRECTORY}/${CARGO_MAKE_PROJECT_NAME}.elf"

[tasks.default]
alias = "link"

# Build tasks

[tasks.compile]
command = "cargo"
args = [ "build", "-Z", "build-std=core,alloc", "-Z", "build-std-features=compiler-builtins-mem", "--target", "${CARGO_CFG_TARGET_FAMILY}", "${CARGO_BUILD_OPTION}" ]

[tasks.build-asm]
command = "nasm"
args = [ "-f", "elf64", "-w+error=label-redef-late", "-o", "${ASM_OBJECT}", "${SOURCE_DIRECOTRY}/boot.asm" ]

[tasks.link]
command = "${LINKER}"
args = [ "-n", "-T", "${LINKER_FILE}", "-o", "${KERNEL}", "${ASM_OBJECT}", "${RUST_OBJECT}" ]
dependencies = [ "compile", "build-asm" ]

[tasks.link.mac]
command = "${LINKER_MAC}"

# Cleanup tasks

[tasks.clean]
command = "cargo"
args = [ "clean" ]
dependencies = [ "remove-kernel" ]

[tasks.remove-kernel]
command = "rm"
args = [ "-f", "${KERNEL}" ]
